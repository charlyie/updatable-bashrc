# Updatable-Bashrc : Functions
#
# The MIT License (MIT)
# Copyright (c) 2017-2021 Charles Bourgeaux <charles@resmush.it> and contributors
# You are not obligated to bundle the LICENSE file with your projects as long
# as you leave these references intact in the header comments of your source files.

#
#
# /!\ Do not edit this file. It may be overriden during an Updatable-Bashrc upgrade!
# Edit .custom.bashrc instead !
#
#

# no more cd ../../../
up(){
    local d=""
    limit=$1
    for ((i=1 ; i <= limit ; i++))
    do
        d=$d/..
    done
    d=$(echo $d | sed 's/^\///')
    if [ -z "$d" ]; then
        d=..
    fi
    cd $d
}

# do sudo, or sudo the last command if no argument given
s(){
    if [[ $# == 0 ]]; then
        sudo $(history -p '!!')
    else
        sudo "$@"
    fi
}

# cd into the last changed directory
cl(){
    last_dir="$(ls -Frt | grep '/$' | tail -n1)"
    if [ -d "$last_dir" ]; then
        cd "$last_dir"
    fi
}

# find <dir> <file name regexp> <file contents regexp>
ff(){
    find ./ -iname "$2" ;
}

# returns IP of current server
getip(){
    curl ipconfig.io
}

# change directory and list
cdl(){
    if [ -n "$1" ]; then
        builtin cd "$@" && ls -la --color=always
    else
        builtin cd ~ && ls -la --color=always
    fi
}

# grep in current folder
g(){
    grep "$1" ./ ;
}

# generates password with specific length
genpass(){
	if [[ -z "$1" ]]; then
		pwdlength=32
	else
		pwdlength="$1"
	fi
	head -c $pwdlength /dev/random | base64 | sed "s:[+=/]::g" | head -c $pwdlength
}

# Reset file rights to base rights
rights(){
    find . -type d -exec chmod 755 "{}" \;
    find . -type f -exec chmod 644 "{}" \;
}

# Transfer a file to a short term storage service
transfer() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi 
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; }